// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PollMonitor.Repository;

namespace PollMonitor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PollMonitor.Models.Poll", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanMultiVote")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnName("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("PollMonitor.Models.PollOption", b =>
                {
                    b.Property<int>("PollOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("PollId")
                        .HasColumnType("bigint");

                    b.Property<int>("PollOptionCount")
                        .HasColumnType("int");

                    b.Property<string>("PollOptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnName("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PollOptionId");

                    b.HasIndex("PollId");

                    b.ToTable("PollOptions");
                });

            modelBuilder.Entity("PollMonitor.Models.Vote", b =>
                {
                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("PollId")
                        .HasColumnType("bigint");

                    b.Property<int>("PollOption")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnName("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Ip");

                    b.HasIndex("PollId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("PollMonitor.Models.PollOption", b =>
                {
                    b.HasOne("PollMonitor.Models.Poll", "Poll")
                        .WithMany()
                        .HasForeignKey("PollId");
                });

            modelBuilder.Entity("PollMonitor.Models.Vote", b =>
                {
                    b.HasOne("PollMonitor.Models.Poll", "Poll")
                        .WithMany()
                        .HasForeignKey("PollId");
                });
#pragma warning restore 612, 618
        }
    }
}
